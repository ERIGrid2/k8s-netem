---
apiVersion: v1
kind: Namespace
metadata:
  name: riasc-system

---
kind: Service
apiVersion: v1
metadata:
  name: k8s-netem-webhook
  namespace: riasc-system
spec:
  selector:
    app: k8s-netem-webhook
  ports:
  - name: https
    protocol: TCP
    port: 443
    targetPort: 443

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-netem-webhook
  labels:
    app: k8s-netem-webhook
  namespace: riasc-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-netem-webhook
  template:
    metadata:
      labels:
        app: k8s-netem-webhook
      name: webhook
    spec:
      serviceAccountName: k8s-netem
      nodeSelector:
        node-role.kubernetes.io/master: "true"
      containers:
      - name: webhook
        command: ['k8s-netem-webhook']
        image: erigrid/netem:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 443
        volumeMounts:
        - readOnly: true
          mountPath: /certs
          name: webhook-certs
        readinessProbe:
          httpGet:
            path: /health
            scheme: HTTPS
            port: 443
          initialDelaySeconds: 3
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /health
            scheme: HTTPS
            port: 443
          initialDelaySeconds: 3
          periodSeconds: 5
      volumes:
      - name: webhook-certs
        secret:
          secretName: k8s-netem-webhook-certs

---
kind: MutatingWebhookConfiguration
apiVersion: admissionregistration.k8s.io/v1
metadata:
  name: k8s-netem-webhook
webhooks:
- name: k8s-netem-webhook.riasc-system.svc
  sideEffects: None
  admissionReviewVersions:
    - "v1"
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods"]
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZrekNDQTN1Z0F3SUJBZ0lVWVlFS1NvdHBjcCs5b0xqL3pKclRSK0dib0E0d0RRWUpLb1pJaHZjTkFRRUwKQlFBd1dURUxNQWtHQTFVRUJoTUNSRVV4RERBS0JnTlZCQWdNQTA1U1Z6RVBNQTBHQTFVRUJ3d0dRV0ZqYUdWdQpNU3N3S1FZRFZRUUREQ0pyT0hNdGJtVjBaVzB0ZDJWaWFHOXZheTV5YVdGell5MXplWE4wWlcwdWMzWmpNQjRYCkRUSXhNRGN4TWpFeU16UTBPRm9YRFRNeE1EY3hNREV5TXpRME9Gb3dXVEVMTUFrR0ExVUVCaE1DUkVVeEREQUsKQmdOVkJBZ01BMDVTVnpFUE1BMEdBMVVFQnd3R1FXRmphR1Z1TVNzd0tRWURWUVFERENKck9ITXRibVYwWlcwdApkMlZpYUc5dmF5NXlhV0Z6WXkxemVYTjBaVzB1YzNaak1JSUNJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBZzhBCk1JSUNDZ0tDQWdFQXNybndJdG5QWFVhMTZwL21KaGlxa3lody9oNElkckVCS0tteStaSmxUN1k3S2JMRTErWWgKSWdsK3h6cUlZYVNuSnRkMFNPN3VYZndjTnh1YllnNldFZVp5MDZIdjR1R1grSTZJTFRwMnVvU3kwK0pONmlzRQoyRUNqUllpU1UveE9aSWVxZ01HK212MW1sdEFrdVdwd3Q4clAwaFlaUXJ6cFRpUXZTZXNtdHFjcUNKLzBtR05WCisvbDVPMWVuaGo4M0IxbDJJaWRJbFI2bDI0TmkxRlBGemtoaUtYZzVuMnMwYjBSQWJ5RDJVRjlhZ0Q2aWhST2IKSVNtZVdVMW5rQ0dhTGVrQndaYU50djY5UTl3cGxIZmZsNjYvbkttZ0oydVJLV1ozZHpFelZHOWJrdCtqVVFWQQoyNDJqUzh2RXQ4S3J0eG1IYjRYVld2RVlMaDVBWWNSTXFQeDRZNGl1SFpkRGNIYmhCeE0yaGFOY251RC9OU0xTClpSYmlTdkc4SnlrRXV3VDV0SlJ1Yk1tdFkzcElJdFVpQmJGZy9ycTBpQjNHc1Q3VkJObHU5cDZReFB2L0IzRXoKb2s2SXRubitBeGVFaUJKVFNUTSt2K1RxcXVSY3hNSkR6K3JsY0hNNXJ1N2UxOFMxeFBrOEMxRU9NUk56YlgrcwovR2t3ZzFRTW95VjVYeDZ2WlNGb2J3eCtSaklFdHBZRG45NVdtcEZMVEpWTXdFZ1QxRnNPT0d0MXpCdStCTXRmCmJWTGdLcDlnOUJ1U2RNbE5hUzFyd242dlFRc0U0UmhuVHlJbXFrRmVsQjdPTUw0cDc2VW84ZXV6NXdyUU8vbmgKUmxHRTZtWkNoQkNBVHN3M2k4UHdSdlF2eG9BbVFqRGkraVFtWm1xNmhuK1JHV09Rd0lwR3lma0NBd0VBQWFOVApNRkV3Q3dZRFZSMFBCQVFEQWdRd01CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUJNQzBHQTFVZEVRUW1NQ1NDCkltczRjeTF1WlhSbGJTMTNaV0pvYjI5ckxuSnBZWE5qTFhONWMzUmxiUzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUwKQlFBRGdnSUJBQ0tvVTVNRHUydUNvTUYzSy9sYmdXamphWlEyVW5aQVJudC9aeUlJUVJsajRJSTc5UWZraVBrcQpJRkdFQ2duT0wwc09Wb0Q1K2lrbFVhUG1pNVJOeXFCTldUN2cyNkplNUlvMVF5RHhqcVJpeU9GK1Z3OVVwY0dkCkVtVVZNU1NCWkJnT1lHQmo3R2c0NXh6ZlNEd1JzYS84K0EwUmZHN1VKT08rNmlWbXhFdjZuK3JVYXduc0FsR20KU0dvTjlCSzNBaGZoS3B2RnN4T1ljR2VuQ1U3ZExTNU02UzB4ajM0dG9BT3RKNERsUE5kbVJLWUxQMVNiU254TgpJandYOFZnWHEzTlpjeDRtSnVWeEpxNWJleWhzcmNZa01BMkM2RVFrSTdWaUhMUnRqN3NMNHRKMXQxaFlFdTI4CmxqTGk1cW5iaTBPWXE0bkUzRmxwSmVZWVBJNnU2eG1HNjc3Q0JlV2FLNW82ZngwdG5zaXUxaGZPV3lDNU9LV3EKdkFaYUx1R0pNcTRTSW5KRnAvQmg1UG5FcFJBUExQN01OTkZvVWlaSDI3aXVPUzZUemN6ek9nYzdjYk9SbHJDcgptUVhHSkxvRy9tL2hsb3FDN0pLeC83bnpWUm1vQktVd1RHMmg0elNCYnNlRDFmUDNCWnZlMFBzVDFSalY2Lzk2CkFwL0lBRi9QcEJhRERpUWhHdnVtVEljdWlaOWxPM3MycDNqSTBZQngxb2MwTDNkQklzMXVFSk92RXhyRjcrSE4KUVFvT0ozVGszSzFlbDFVZlcxNXVNUUdUVFVaUjh1bmlFanhicUJGV3NETXc5R3VUeWVvN2lpZW9ITzNGNTNOSwpPTTZNSXZpNkZiTVNpKzczaTVFK0NDUDRITThJZ2FmRE4zbkVFTCtJa1Yxb3Mvb1hoejlICi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    service:
      namespace: riasc-system
      name: k8s-netem-webhook
      path: /mutate
      port: 443

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-netem
  namespace: riasc-system
automountServiceAccountToken: true

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: trafficprofile-reader
rules:
- apiGroups: ["k8s-netem.riasc.eu"]
  resources: ["trafficprofiles"]
  verbs: ["get", "watch", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: trafficprofile-reader
subjects:
- kind: ServiceAccount
  name: k8s-netem
  namespace: riasc-system
roleRef:
  kind: ClusterRole
  name: trafficprofile-reader
  apiGroup: rbac.authorization.k8s.io
